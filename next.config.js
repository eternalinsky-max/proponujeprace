/** @type {import('next').NextConfig} */
const nextConfig = {
  // –ë—ñ–ª—å—à —Å—É–≤–æ—Ä–∏–π —Ä–µ–∂–∏–º React —É –¥–µ–≤-—Ä–µ–∂–∏–º—ñ (–Ω–µ –≤–ø–ª–∏–≤–∞—î –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω)
  reactStrictMode: true,

  // –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –¥–ª—è –¥–µ–ø–ª–æ—é (Vercel/Docker)
  output: "standalone",

  // –î–æ–∑–≤–æ–ª–µ–Ω—ñ –∑–æ–≤–Ω—ñ—à–Ω—ñ —Ö–æ—Å—Ç–∏ –¥–ª—è <Image />
  images: {
    remotePatterns: [
      // üîπ Firebase (—Ç–≤–æ—ó —Ñ–∞–π–ª–∏)
      { protocol: "https", hostname: "firebasestorage.googleapis.com" },
      { protocol: "https", hostname: "job-board-js12.firebasestorage.app" },

      // üîπ –î–ª—è –∞–≤–∞—Ç–∞—Ä—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ (UI Avatars / Google Photos)
      { protocol: "https", hostname: "ui-avatars.com" },
      { protocol: "https", hostname: "**.googleusercontent.com" },
      { protocol: "https", hostname: "**.ggpht.com" },
    ],
  },

  // –£ –ø—Ä–æ–¥—ñ –∫—Ä–∞—â–µ –Ω–µ –ª–∞–º–∞—Ç–∏ –±—ñ–ª–¥ —á–µ—Ä–µ–∑ ESLint
  eslint: {
    ignoreDuringBuilds: true,
  },

  // (–û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ) –Ø–∫—â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—à TypeScript
  // typescript: { ignoreBuildErrors: true },

  // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ security-headers
  async headers() {
    return [
      {
        source: "/:path*",
        headers: [
          { key: "X-Content-Type-Options", value: "nosniff" },
          { key: "Referrer-Policy", value: "strict-origin-when-cross-origin" },
          { key: "X-Frame-Options", value: "DENY" },
          {
            key: "Permissions-Policy",
            value: [
              "camera=()",
              "microphone=()",
              "geolocation=()",
              "payment=()",
              "usb=()",
            ].join(", "),
          },
        ],
      },
    ];
  },
};

module.exports = nextConfig;
